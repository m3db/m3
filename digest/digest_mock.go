// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/m3db/m3db/digest (interfaces: ReaderWithDigest)

package digest

import (
	gomock "github.com/golang/mock/gomock"
	hash "hash"
	io "io"
)

// Mock of ReaderWithDigest interface
type MockReaderWithDigest struct {
	ctrl     *gomock.Controller
	recorder *_MockReaderWithDigestRecorder
}

// Recorder for MockReaderWithDigest (not exported)
type _MockReaderWithDigestRecorder struct {
	mock *MockReaderWithDigest
}

func NewMockReaderWithDigest(ctrl *gomock.Controller) *MockReaderWithDigest {
	mock := &MockReaderWithDigest{ctrl: ctrl}
	mock.recorder = &_MockReaderWithDigestRecorder{mock}
	return mock
}

func (_m *MockReaderWithDigest) EXPECT() *_MockReaderWithDigestRecorder {
	return _m.recorder
}

func (_m *MockReaderWithDigest) Digest() hash.Hash32 {
	ret := _m.ctrl.Call(_m, "Digest")
	ret0, _ := ret[0].(hash.Hash32)
	return ret0
}

func (_mr *_MockReaderWithDigestRecorder) Digest() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Digest")
}

func (_m *MockReaderWithDigest) Read(_param0 []byte) (int, error) {
	ret := _m.ctrl.Call(_m, "Read", _param0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockReaderWithDigestRecorder) Read(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Read", arg0)
}

func (_m *MockReaderWithDigest) Reset(_param0 io.Reader) {
	_m.ctrl.Call(_m, "Reset", _param0)
}

func (_mr *_MockReaderWithDigestRecorder) Reset(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Reset", arg0)
}

func (_m *MockReaderWithDigest) Validate(_param0 uint32) error {
	ret := _m.ctrl.Call(_m, "Validate", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockReaderWithDigestRecorder) Validate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate", arg0)
}
