// Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

option go_package = "github.com/m3db/m3/src/metrics/generated/proto/rulepb";

package rulepb;

import "github.com/m3db/m3/src/metrics/generated/proto/aggregationpb/aggregation.proto";
import "github.com/m3db/m3/src/metrics/generated/proto/pipelinepb/pipeline.proto";
import "github.com/m3db/m3/src/metrics/generated/proto/policypb/policy.proto";

message MappingRuleSnapshot {
  string name = 1;
  bool tombstoned = 2;
  int64 cutover_nanos = 3;
  string filter = 4;
  // TODO(xichen): remove this and mark the field number reserved once all mapping rules are updated in KV.
  repeated policypb.Policy policies = 5;
  int64 last_updated_at_nanos = 6;
  string last_updated_by = 7;
  repeated aggregationpb.AggregationType aggregation_types = 8;
  repeated policypb.StoragePolicy storage_policies = 9;
  policypb.DropPolicy drop_policy = 10;
}

message MappingRule {
  string uuid = 1;
  repeated MappingRuleSnapshot snapshots = 2;
}

// TODO(xichen): remove this once all rules are updated in KV.
message RollupTarget {
  string name = 1;
  repeated string tags = 2;
  repeated policypb.Policy policies = 3;
}

// TODO(xichen): rename this once all rules are updated in KV.
message RollupTargetV2 {
  pipelinepb.Pipeline pipeline = 1;
  repeated policypb.StoragePolicy storage_policies = 2;
}

message RollupRuleSnapshot {
  string name = 1;
  bool tombstoned = 2;
  int64 cutover_nanos = 3;
  string filter = 4;
  // TODO(xichen): remove this and mark the field number reserved once all rollup rules are updated in KV.
  repeated RollupTarget targets = 5;
  int64 last_updated_at_nanos = 6;
  string last_updated_by = 7;
  // TODO(xichen): rename this once all rules are updated in KV.
  repeated RollupTargetV2 targets_v2 = 8;
}

message RollupRule {
  string uuid = 1;
  repeated RollupRuleSnapshot snapshots = 2;
}

message RuleSet {
  string uuid = 1;
  string namespace = 2;
  int64 created_at_nanos = 3;
  int64 last_updated_at_nanos = 4;
  bool tombstoned = 5;
  int64 cutover_nanos = 6;
  repeated MappingRule mapping_rules = 7;
  repeated RollupRule rollup_rules = 8;
  string last_updated_by = 9;
}
