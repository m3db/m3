
syntax = "proto3";
package m3prometheus;

option go_package = "prompb";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message Sample {
  double value    = 1;
  int64 timestamp = 2;
}

message TimeSeries {
  repeated Label labels   = 1 [(gogoproto.nullable) = false];
  repeated Sample samples = 2 [(gogoproto.nullable) = false];
  MetricType type         = 3;
  string unit             = 4;
  string help             = 5;

  // NB: These are custom fields that M3 uses. They start at 101 so that they
  // should never clash with prometheus fields.
  M3Type m3_type        = 101;
  Source source         = 102;
}

message Label {
  bytes name  = 1;
  bytes value = 2;
}

message Labels {
  repeated Label labels = 1 [(gogoproto.nullable) = false];
}

// Matcher specifies a rule, which can match or set of labels or not.
message LabelMatcher {
  enum Type {
    EQ  = 0;
    NEQ = 1;
    RE  = 2;
    NRE = 3;
  }
  Type type   = 1;
  bytes name  = 2;
  bytes value = 3;
}

enum MetricType {
  UNKNOWN         = 0;
  COUNTER         = 1;
  GAUGE           = 2;
  HISTOGRAM       = 3;
  GAUGE_HISTOGRAM = 4;
  SUMMARY         = 5;
  INFO            = 6;
  STATESET        = 7;
}

enum M3Type {
  M3_GAUGE = 0;
  M3_COUNTER = 1;
  M3_TIMER = 2;
}

enum Source {
  PROMETHEUS = 0;
  GRAPHITE = 1;
}
