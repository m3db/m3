// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m3db/m3/src/cmd/services/m3dbnode/config (interfaces: BootstrapConfigurationValidator)

// Package config is a generated GoMock package.
package config

import (
	"reflect"

	"github.com/m3db/m3/src/dbnode/storage/bootstrap/bootstrapper/commitlog"
	"github.com/m3db/m3/src/dbnode/storage/bootstrap/bootstrapper/fs"
	"github.com/m3db/m3/src/dbnode/storage/bootstrap/bootstrapper/peers"
	"github.com/m3db/m3/src/dbnode/storage/bootstrap/bootstrapper/uninitialized"

	"github.com/golang/mock/gomock"
)

// MockBootstrapConfigurationValidator is a mock of BootstrapConfigurationValidator interface
type MockBootstrapConfigurationValidator struct {
	ctrl     *gomock.Controller
	recorder *MockBootstrapConfigurationValidatorMockRecorder
}

// MockBootstrapConfigurationValidatorMockRecorder is the mock recorder for MockBootstrapConfigurationValidator
type MockBootstrapConfigurationValidatorMockRecorder struct {
	mock *MockBootstrapConfigurationValidator
}

// NewMockBootstrapConfigurationValidator creates a new mock instance
func NewMockBootstrapConfigurationValidator(ctrl *gomock.Controller) *MockBootstrapConfigurationValidator {
	mock := &MockBootstrapConfigurationValidator{ctrl: ctrl}
	mock.recorder = &MockBootstrapConfigurationValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBootstrapConfigurationValidator) EXPECT() *MockBootstrapConfigurationValidatorMockRecorder {
	return m.recorder
}

// ValidateBootstrappersOrder mocks base method
func (m *MockBootstrapConfigurationValidator) ValidateBootstrappersOrder(arg0 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateBootstrappersOrder", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateBootstrappersOrder indicates an expected call of ValidateBootstrappersOrder
func (mr *MockBootstrapConfigurationValidatorMockRecorder) ValidateBootstrappersOrder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateBootstrappersOrder", reflect.TypeOf((*MockBootstrapConfigurationValidator)(nil).ValidateBootstrappersOrder), arg0)
}

// ValidateCommitLogBootstrapperOptions mocks base method
func (m *MockBootstrapConfigurationValidator) ValidateCommitLogBootstrapperOptions(arg0 commitlog.Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCommitLogBootstrapperOptions", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateCommitLogBootstrapperOptions indicates an expected call of ValidateCommitLogBootstrapperOptions
func (mr *MockBootstrapConfigurationValidatorMockRecorder) ValidateCommitLogBootstrapperOptions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCommitLogBootstrapperOptions", reflect.TypeOf((*MockBootstrapConfigurationValidator)(nil).ValidateCommitLogBootstrapperOptions), arg0)
}

// ValidateFilesystemBootstrapperOptions mocks base method
func (m *MockBootstrapConfigurationValidator) ValidateFilesystemBootstrapperOptions(arg0 fs.Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateFilesystemBootstrapperOptions", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateFilesystemBootstrapperOptions indicates an expected call of ValidateFilesystemBootstrapperOptions
func (mr *MockBootstrapConfigurationValidatorMockRecorder) ValidateFilesystemBootstrapperOptions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateFilesystemBootstrapperOptions", reflect.TypeOf((*MockBootstrapConfigurationValidator)(nil).ValidateFilesystemBootstrapperOptions), arg0)
}

// ValidatePeersBootstrapperOptions mocks base method
func (m *MockBootstrapConfigurationValidator) ValidatePeersBootstrapperOptions(arg0 peers.Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatePeersBootstrapperOptions", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidatePeersBootstrapperOptions indicates an expected call of ValidatePeersBootstrapperOptions
func (mr *MockBootstrapConfigurationValidatorMockRecorder) ValidatePeersBootstrapperOptions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatePeersBootstrapperOptions", reflect.TypeOf((*MockBootstrapConfigurationValidator)(nil).ValidatePeersBootstrapperOptions), arg0)
}

// ValidateUninitializedBootstrapperOptions mocks base method
func (m *MockBootstrapConfigurationValidator) ValidateUninitializedBootstrapperOptions(arg0 uninitialized.Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUninitializedBootstrapperOptions", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateUninitializedBootstrapperOptions indicates an expected call of ValidateUninitializedBootstrapperOptions
func (mr *MockBootstrapConfigurationValidatorMockRecorder) ValidateUninitializedBootstrapperOptions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUninitializedBootstrapperOptions", reflect.TypeOf((*MockBootstrapConfigurationValidator)(nil).ValidateUninitializedBootstrapperOptions), arg0)
}
