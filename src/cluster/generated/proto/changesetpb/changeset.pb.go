// Code generated by protoc-gen-go.
// source: changeset.proto
// DO NOT EDIT!

/*
Package changesetpb is a generated protocol buffer package.

It is generated from these files:
	changeset.proto

It has these top-level messages:
	ChangeSet
*/
package changesetpb

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

// ChangeSetState tracks the stateof a changeset
type ChangeSetState int32

const (
	ChangeSetState_UNKNOWN ChangeSetState = 0
	ChangeSetState_OPEN    ChangeSetState = 1
	ChangeSetState_CLOSED  ChangeSetState = 2
)

var ChangeSetState_name = map[int32]string{
	0: "UNKNOWN",
	1: "OPEN",
	2: "CLOSED",
}
var ChangeSetState_value = map[string]int32{
	"UNKNOWN": 0,
	"OPEN":    1,
	"CLOSED":  2,
}

func (x ChangeSetState) String() string {
	return proto.EnumName(ChangeSetState_name, int32(x))
}

// A ChangeSet is a set of changes that are applied together.  The exact
// format of the changes is up to the application; the ChangeSet simply
// tracks the state of application
type ChangeSet struct {
	// for_version is the version of configuration on which this ChangeSet is built
	ForVersion int32 `protobuf:"varint,1,opt,name=for_version" json:"for_version,omitempty"`
	// state is the state of the ChangeSet
	State ChangeSetState `protobuf:"varint,2,opt,name=state,enum=changesetpb.ChangeSetState" json:"state,omitempty"`
	// changes are the marshalled form of the changes
	Changes []byte `protobuf:"bytes,3,opt,name=changes,proto3" json:"changes,omitempty"`
}

func (m *ChangeSet) Reset()         { *m = ChangeSet{} }
func (m *ChangeSet) String() string { return proto.CompactTextString(m) }
func (*ChangeSet) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("changesetpb.ChangeSetState", ChangeSetState_name, ChangeSetState_value)
}
