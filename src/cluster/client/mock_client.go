// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/m3db/m3cluster/client (interfaces: Client)

package client

import (
	gomock "github.com/golang/mock/gomock"
	kv "github.com/m3db/m3cluster/kv"
	services "github.com/m3db/m3cluster/services"
)

// Mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *_MockClientRecorder
}

// Recorder for MockClient (not exported)
type _MockClientRecorder struct {
	mock *MockClient
}

func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &_MockClientRecorder{mock}
	return mock
}

func (_m *MockClient) EXPECT() *_MockClientRecorder {
	return _m.recorder
}

func (_m *MockClient) KV() kv.Store {
	ret := _m.ctrl.Call(_m, "KV")
	ret0, _ := ret[0].(kv.Store)
	return ret0
}

func (_mr *_MockClientRecorder) KV() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "KV")
}

func (_m *MockClient) Services() services.Services {
	ret := _m.ctrl.Call(_m, "Services")
	ret0, _ := ret[0].(services.Services)
	return ret0
}

func (_mr *_MockClientRecorder) Services() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Services")
}
