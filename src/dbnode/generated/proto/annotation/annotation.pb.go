// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/m3db/m3/src/dbnode/generated/proto/annotation/annotation.proto

// Copyright (c) 2024 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package annotation

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SourceFormat int32

const (
	// OPEN_METRICS also includes Prometheus data.
	// Using 0 for OPEN_METRICS because only Prometheus types were being stored before.
	SourceFormat_OPEN_METRICS SourceFormat = 0
	// Graphite/statsd.
	SourceFormat_GRAPHITE SourceFormat = 1
)

var SourceFormat_name = map[int32]string{
	0: "OPEN_METRICS",
	1: "GRAPHITE",
}

var SourceFormat_value = map[string]int32{
	"OPEN_METRICS": 0,
	"GRAPHITE":     1,
}

func (x SourceFormat) String() string {
	return proto.EnumName(SourceFormat_name, int32(x))
}

func (SourceFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6af3382a68937b8d, []int{0}
}

type OpenMetricsFamilyType int32

const (
	OpenMetricsFamilyType_UNKNOWN         OpenMetricsFamilyType = 0
	OpenMetricsFamilyType_COUNTER         OpenMetricsFamilyType = 1
	OpenMetricsFamilyType_GAUGE           OpenMetricsFamilyType = 2
	OpenMetricsFamilyType_HISTOGRAM       OpenMetricsFamilyType = 3
	OpenMetricsFamilyType_GAUGE_HISTOGRAM OpenMetricsFamilyType = 4
	OpenMetricsFamilyType_SUMMARY         OpenMetricsFamilyType = 5
	OpenMetricsFamilyType_INFO            OpenMetricsFamilyType = 6
	OpenMetricsFamilyType_STATESET        OpenMetricsFamilyType = 7
)

var OpenMetricsFamilyType_name = map[int32]string{
	0: "UNKNOWN",
	1: "COUNTER",
	2: "GAUGE",
	3: "HISTOGRAM",
	4: "GAUGE_HISTOGRAM",
	5: "SUMMARY",
	6: "INFO",
	7: "STATESET",
}

var OpenMetricsFamilyType_value = map[string]int32{
	"UNKNOWN":         0,
	"COUNTER":         1,
	"GAUGE":           2,
	"HISTOGRAM":       3,
	"GAUGE_HISTOGRAM": 4,
	"SUMMARY":         5,
	"INFO":            6,
	"STATESET":        7,
}

func (x OpenMetricsFamilyType) String() string {
	return proto.EnumName(OpenMetricsFamilyType_name, int32(x))
}

func (OpenMetricsFamilyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6af3382a68937b8d, []int{1}
}

type GraphiteType int32

const (
	GraphiteType_GRAPHITE_UNKNOWN GraphiteType = 0
	GraphiteType_GRAPHITE_COUNTER GraphiteType = 1
	GraphiteType_GRAPHITE_GAUGE   GraphiteType = 2
	GraphiteType_GRAPHITE_TIMER   GraphiteType = 3
)

var GraphiteType_name = map[int32]string{
	0: "GRAPHITE_UNKNOWN",
	1: "GRAPHITE_COUNTER",
	2: "GRAPHITE_GAUGE",
	3: "GRAPHITE_TIMER",
}

var GraphiteType_value = map[string]int32{
	"GRAPHITE_UNKNOWN": 0,
	"GRAPHITE_COUNTER": 1,
	"GRAPHITE_GAUGE":   2,
	"GRAPHITE_TIMER":   3,
}

func (x GraphiteType) String() string {
	return proto.EnumName(GraphiteType_name, int32(x))
}

func (GraphiteType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6af3382a68937b8d, []int{2}
}

type Payload struct {
	SourceFormat SourceFormat `protobuf:"varint,3,opt,name=source_format,json=sourceFormat,proto3,enum=annotation.SourceFormat" json:"source_format,omitempty"`
	// Used when source_format == OPEN_METRICS
	OpenMetricsFamilyType        OpenMetricsFamilyType `protobuf:"varint,1,opt,name=open_metrics_family_type,json=openMetricsFamilyType,proto3,enum=annotation.OpenMetricsFamilyType" json:"open_metrics_family_type,omitempty"`
	OpenMetricsHandleValueResets bool                  `protobuf:"varint,2,opt,name=open_metrics_handle_value_resets,json=openMetricsHandleValueResets,proto3" json:"open_metrics_handle_value_resets,omitempty"`
	// Used when source_format == GRAPHITE
	GraphiteType GraphiteType `protobuf:"varint,4,opt,name=graphite_type,json=graphiteType,proto3,enum=annotation.GraphiteType" json:"graphite_type,omitempty"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af3382a68937b8d, []int{0}
}
func (m *Payload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return m.Size()
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetSourceFormat() SourceFormat {
	if m != nil {
		return m.SourceFormat
	}
	return SourceFormat_OPEN_METRICS
}

func (m *Payload) GetOpenMetricsFamilyType() OpenMetricsFamilyType {
	if m != nil {
		return m.OpenMetricsFamilyType
	}
	return OpenMetricsFamilyType_UNKNOWN
}

func (m *Payload) GetOpenMetricsHandleValueResets() bool {
	if m != nil {
		return m.OpenMetricsHandleValueResets
	}
	return false
}

func (m *Payload) GetGraphiteType() GraphiteType {
	if m != nil {
		return m.GraphiteType
	}
	return GraphiteType_GRAPHITE_UNKNOWN
}

func init() {
	proto.RegisterEnum("annotation.SourceFormat", SourceFormat_name, SourceFormat_value)
	proto.RegisterEnum("annotation.OpenMetricsFamilyType", OpenMetricsFamilyType_name, OpenMetricsFamilyType_value)
	proto.RegisterEnum("annotation.GraphiteType", GraphiteType_name, GraphiteType_value)
	proto.RegisterType((*Payload)(nil), "annotation.Payload")
}

func init() {
	proto.RegisterFile("github.com/m3db/m3/src/dbnode/generated/proto/annotation/annotation.proto", fileDescriptor_6af3382a68937b8d)
}

var fileDescriptor_6af3382a68937b8d = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6e, 0xd3, 0x30,
	0x1c, 0xc6, 0x93, 0xb6, 0x5b, 0x3b, 0x93, 0x0d, 0xcb, 0x30, 0x29, 0x07, 0x14, 0x15, 0x4e, 0x53,
	0x0f, 0x8d, 0x44, 0xcf, 0x1c, 0xc2, 0x94, 0xa6, 0x11, 0x4a, 0x52, 0x39, 0x29, 0x08, 0x2e, 0x96,
	0xd3, 0x78, 0x6d, 0xa4, 0x26, 0x8e, 0x12, 0x17, 0xa9, 0x0f, 0xc0, 0x9d, 0xf7, 0xe0, 0x45, 0x38,
	0xee, 0xc8, 0x11, 0xb5, 0x2f, 0x82, 0xe2, 0x31, 0x6a, 0xb4, 0xde, 0xfc, 0xff, 0xfe, 0x9f, 0x3f,
	0xfd, 0x3e, 0xcb, 0xc0, 0x5f, 0xe5, 0x62, 0xbd, 0x4d, 0xc7, 0x4b, 0x5e, 0xd8, 0xc5, 0x24, 0x4b,
	0xed, 0x62, 0x62, 0x37, 0xf5, 0xd2, 0xce, 0xd2, 0x92, 0x67, 0xcc, 0x5e, 0xb1, 0x92, 0xd5, 0x54,
	0xb0, 0xcc, 0xae, 0x6a, 0x2e, 0xb8, 0x4d, 0xcb, 0x92, 0x0b, 0x2a, 0x72, 0x5e, 0x2a, 0xc7, 0xb1,
	0xdc, 0x21, 0x70, 0x54, 0xde, 0xfc, 0xe8, 0x80, 0xfe, 0x9c, 0xee, 0x36, 0x9c, 0x66, 0xe8, 0x1d,
	0xb8, 0x6c, 0xf8, 0xb6, 0x5e, 0x32, 0x72, 0xc7, 0xeb, 0x82, 0x0a, 0xb3, 0x3b, 0xd4, 0x6f, 0xae,
	0xde, 0x9a, 0x63, 0x25, 0x21, 0x96, 0x86, 0xa9, 0xdc, 0x63, 0xa3, 0x51, 0x26, 0xf4, 0x05, 0x98,
	0xbc, 0x62, 0x25, 0x29, 0x98, 0xa8, 0xf3, 0x65, 0x43, 0xee, 0x68, 0x91, 0x6f, 0x76, 0x44, 0xec,
	0x2a, 0x66, 0xea, 0x32, 0xe9, 0xb5, 0x9a, 0x14, 0x55, 0xac, 0x0c, 0x1e, 0xac, 0x53, 0xe9, 0x4c,
	0x76, 0x15, 0xc3, 0xd7, 0xfc, 0x94, 0x8c, 0xa6, 0x60, 0xf8, 0x5f, 0xf6, 0x9a, 0x96, 0xd9, 0x86,
	0x91, 0xaf, 0x74, 0xb3, 0x65, 0xa4, 0x66, 0x0d, 0x13, 0x8d, 0xd9, 0x19, 0xea, 0x37, 0x03, 0xfc,
	0x4a, 0x09, 0x98, 0x49, 0xd7, 0xc7, 0xd6, 0x84, 0xa5, 0xa7, 0xad, 0xb8, 0xaa, 0x69, 0xb5, 0xce,
	0x05, 0x7b, 0x00, 0xeb, 0x3d, 0xad, 0xe8, 0xfd, 0x35, 0x48, 0x1e, 0x63, 0xa5, 0x4c, 0xa3, 0x31,
	0x30, 0xd4, 0x07, 0x40, 0x10, 0x18, 0xd1, 0xdc, 0x0d, 0x49, 0xe0, 0x26, 0xd8, 0xbf, 0x8d, 0xa1,
	0x86, 0x0c, 0x30, 0xf0, 0xb0, 0x33, 0x9f, 0xf9, 0x89, 0x0b, 0xf5, 0xd1, 0x37, 0x1d, 0x5c, 0x9f,
	0xec, 0x89, 0x9e, 0x81, 0xfe, 0x22, 0xfc, 0x10, 0x46, 0x9f, 0x42, 0xa8, 0xb5, 0xc3, 0x6d, 0xb4,
	0x08, 0x13, 0x17, 0x43, 0x1d, 0x5d, 0x80, 0x33, 0xcf, 0x59, 0x78, 0x2e, 0xec, 0xa0, 0x4b, 0x70,
	0x31, 0xf3, 0xe3, 0x24, 0xf2, 0xb0, 0x13, 0xc0, 0x2e, 0x7a, 0x01, 0x9e, 0xcb, 0x0d, 0x39, 0x8a,
	0xbd, 0xf6, 0x6e, 0xbc, 0x08, 0x02, 0x07, 0x7f, 0x86, 0x67, 0x68, 0x00, 0x7a, 0x7e, 0x38, 0x8d,
	0xe0, 0x79, 0xcb, 0x11, 0x27, 0x4e, 0xe2, 0xc6, 0x6e, 0x02, 0xfb, 0xa3, 0x14, 0x18, 0x6a, 0x2b,
	0xf4, 0x12, 0xc0, 0x47, 0x4a, 0x72, 0xc4, 0x50, 0xd5, 0x23, 0x0f, 0x02, 0x57, 0xff, 0xd4, 0x47,
	0x30, 0x55, 0x4b, 0xfc, 0xc0, 0xc5, 0xb0, 0xfb, 0xde, 0xfc, 0xb9, 0xb7, 0xf4, 0xfb, 0xbd, 0xa5,
	0xff, 0xde, 0x5b, 0xfa, 0xf7, 0x83, 0xa5, 0xdd, 0x1f, 0x2c, 0xed, 0xd7, 0xc1, 0xd2, 0xd2, 0x73,
	0xf9, 0xed, 0x26, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x44, 0x79, 0xdc, 0x1c, 0xc3, 0x02, 0x00,
	0x00,
}

func (m *Payload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Payload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Payload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GraphiteType != 0 {
		i = encodeVarintAnnotation(dAtA, i, uint64(m.GraphiteType))
		i--
		dAtA[i] = 0x20
	}
	if m.SourceFormat != 0 {
		i = encodeVarintAnnotation(dAtA, i, uint64(m.SourceFormat))
		i--
		dAtA[i] = 0x18
	}
	if m.OpenMetricsHandleValueResets {
		i--
		if m.OpenMetricsHandleValueResets {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.OpenMetricsFamilyType != 0 {
		i = encodeVarintAnnotation(dAtA, i, uint64(m.OpenMetricsFamilyType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintAnnotation(dAtA []byte, offset int, v uint64) int {
	offset -= sovAnnotation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Payload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OpenMetricsFamilyType != 0 {
		n += 1 + sovAnnotation(uint64(m.OpenMetricsFamilyType))
	}
	if m.OpenMetricsHandleValueResets {
		n += 2
	}
	if m.SourceFormat != 0 {
		n += 1 + sovAnnotation(uint64(m.SourceFormat))
	}
	if m.GraphiteType != 0 {
		n += 1 + sovAnnotation(uint64(m.GraphiteType))
	}
	return n
}

func sovAnnotation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAnnotation(x uint64) (n int) {
	return sovAnnotation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Payload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAnnotation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Payload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Payload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenMetricsFamilyType", wireType)
			}
			m.OpenMetricsFamilyType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAnnotation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OpenMetricsFamilyType |= OpenMetricsFamilyType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenMetricsHandleValueResets", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAnnotation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OpenMetricsHandleValueResets = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceFormat", wireType)
			}
			m.SourceFormat = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAnnotation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceFormat |= SourceFormat(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GraphiteType", wireType)
			}
			m.GraphiteType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAnnotation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GraphiteType |= GraphiteType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAnnotation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAnnotation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAnnotation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAnnotation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAnnotation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAnnotation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAnnotation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAnnotation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAnnotation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAnnotation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAnnotation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAnnotation = fmt.Errorf("proto: unexpected end of group")
)
