// Code generated by protoc-gen-go.
// source: persistfscommitlog.proto
// DO NOT EDIT!

/*
Package schema is a generated protocol buffer package.

It is generated from these files:
	persistfscommitlog.proto

It has these top-level messages:
	CommitLogInfo
	CommitLog
	CommitLogMetadata
*/
package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CommitLogInfo struct {
	Start    int64 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	Duration int64 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	Index    int64 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *CommitLogInfo) Reset()                    { *m = CommitLogInfo{} }
func (m *CommitLogInfo) String() string            { return proto.CompactTextString(m) }
func (*CommitLogInfo) ProtoMessage()               {}
func (*CommitLogInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CommitLog struct {
	Created    int64   `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`
	Idx        uint64  `protobuf:"varint,2,opt,name=idx" json:"idx,omitempty"`
	Metadata   []byte  `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp  int64   `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Value      float64 `protobuf:"fixed64,5,opt,name=value" json:"value,omitempty"`
	Unit       uint32  `protobuf:"varint,6,opt,name=unit" json:"unit,omitempty"`
	Annotation []byte  `protobuf:"bytes,7,opt,name=annotation,proto3" json:"annotation,omitempty"`
}

func (m *CommitLog) Reset()                    { *m = CommitLog{} }
func (m *CommitLog) String() string            { return proto.CompactTextString(m) }
func (*CommitLog) ProtoMessage()               {}
func (*CommitLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CommitLogMetadata struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Shard uint32 `protobuf:"varint,2,opt,name=shard" json:"shard,omitempty"`
}

func (m *CommitLogMetadata) Reset()                    { *m = CommitLogMetadata{} }
func (m *CommitLogMetadata) String() string            { return proto.CompactTextString(m) }
func (*CommitLogMetadata) ProtoMessage()               {}
func (*CommitLogMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*CommitLogInfo)(nil), "schema.CommitLogInfo")
	proto.RegisterType((*CommitLog)(nil), "schema.CommitLog")
	proto.RegisterType((*CommitLogMetadata)(nil), "schema.CommitLogMetadata")
}

var fileDescriptor0 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x26, 0x4d, 0xc9, 0x89, 0x20, 0xb0, 0x18, 0x2c, 0x84, 0x10, 0xca, 0xc4, 0xc4,
	0xc2, 0xc4, 0xcc, 0x84, 0x04, 0x8b, 0x17, 0xe6, 0x23, 0x76, 0x5b, 0x4b, 0xb5, 0x1d, 0xd9, 0x17,
	0xd4, 0xff, 0xc6, 0x9f, 0x23, 0x39, 0xd3, 0xc0, 0x76, 0xdf, 0x3d, 0xf9, 0xbd, 0xe7, 0x03, 0x39,
	0x98, 0x98, 0x6c, 0xa2, 0x6d, 0xea, 0x83, 0x73, 0x96, 0x0e, 0x61, 0xf7, 0x38, 0xc4, 0x40, 0x41,
	0xd4, 0xa9, 0xdf, 0x1b, 0x87, 0xdd, 0x07, 0xb4, 0x2f, 0x2c, 0xbd, 0x85, 0xdd, 0xab, 0xdf, 0x06,
	0x71, 0x0d, 0xeb, 0x44, 0x18, 0x49, 0x16, 0xf7, 0xc5, 0x43, 0xa9, 0x32, 0x88, 0x1b, 0x38, 0xd3,
	0x63, 0x44, 0xb2, 0xc1, 0xcb, 0x15, 0x0b, 0x0b, 0xcf, 0x2f, 0xac, 0xd7, 0xe6, 0x28, 0xcb, 0xfc,
	0x82, 0xa1, 0xfb, 0x2e, 0xa0, 0x59, 0x9c, 0x85, 0x84, 0x4d, 0x1f, 0x0d, 0x92, 0xd1, 0xbf, 0xbe,
	0x27, 0x14, 0x97, 0x50, 0x5a, 0x7d, 0x64, 0xd3, 0x4a, 0xcd, 0xe3, 0x9c, 0xe5, 0x0c, 0xa1, 0x46,
	0x42, 0xb6, 0x3c, 0x57, 0x0b, 0x8b, 0x5b, 0x68, 0xc8, 0x3a, 0x33, 0x95, 0x72, 0x83, 0xac, 0xd8,
	0xe9, 0x6f, 0x31, 0x37, 0xf9, 0xc2, 0xc3, 0x68, 0xe4, 0x7a, 0x52, 0x0a, 0x95, 0x41, 0x08, 0xa8,
	0x46, 0x6f, 0x49, 0xd6, 0xd3, 0xb2, 0x55, 0x3c, 0x8b, 0x3b, 0x00, 0xf4, 0x3e, 0x50, 0xfe, 0xd1,
	0x86, 0x53, 0xfe, 0x6d, 0xba, 0x67, 0xb8, 0x5a, 0xca, 0xbf, 0x9f, 0xc2, 0x2f, 0x60, 0x65, 0x73,
	0xff, 0x46, 0x4d, 0x13, 0x9f, 0x6a, 0x8f, 0x51, 0x73, 0xf9, 0x56, 0x65, 0xf8, 0xac, 0xf9, 0xc0,
	0x4f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x17, 0x9c, 0x73, 0x72, 0x7c, 0x01, 0x00, 0x00,
}
