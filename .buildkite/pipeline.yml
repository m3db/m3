common: &common
  timeout_in_minutes: 20
  agents:
    queue: monorepo
  retry:
    # Automatically retry failures one time.
    automatic:
      limit: 1
    # Allow manual retries.
    manual: true

steps:
  - name: "Check for :docker: build"
    command: ".buildkite/scripts/check_do_docker.sh"
    agents:
      queue: init
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1
      manual: true
  - name: "Codegen"
    command: make clean install-vendor test-all-gen
    env:
      CGO_ENABLED: 0
      GIMME_GO_VERSION: 1.10.x
    plugins:
        gopath-checkout#v1.0.1:
          import: github.com/m3db/m3
    <<: *common
  - name: "Unit %n"
    command: make clean install-vendor test-ci-unit
    parallelism: 4
    plugins:
      docker-compose#v2.5.1:
        run: app
        workdir: /go/src/github.com/m3db/m3
    <<: *common
  - name: "Big Unit %n"
    command: make clean install-vendor test-ci-big-unit
    parallelism: 2
    plugins:
      docker-compose#v2.5.1:
        run: app
        workdir: /go/src/github.com/m3db/m3
    <<: *common
  - name: "Integration (:docker:), Services, Tools, Metalint"
    command: make install-vendor metalint docker-integration-test tools services
    env:
      CGO_ENABLED: 0
      GIMME_GO_VERSION: 1.10.x
    plugins:
        gopath-checkout#v1.0.1:
          import: github.com/m3db/m3
    <<: *common
  - name: "Integration (dbnode Recently Read) %n"
    parallelism: 2
    command: make clean install-vendor test-ci-integration-dbnode cache_policy=recently_read
    plugins:
      docker-compose#v2.5.1:
        run: app
        workdir: /go/src/github.com/m3db/m3
    <<: *common
  - name: "Integration (dbnode LRU) %n"
    parallelism: 2
    command: make clean install-vendor test-ci-integration-dbnode cache_policy=lru
    plugins:
      docker-compose#v2.5.1:
        run: app
        workdir: /go/src/github.com/m3db/m3
    <<: *common
  - label: "Integration (collector, aggregator, m3em, cluster, msg, metrics) %n"
    parallelism: 4
    command: make clean install-vendor test-ci-integration-collector test-ci-integration-aggregator test-ci-integration-m3em test-ci-integration-cluster test-ci-integration-msg test-ci-integration-metrics
    plugins:
      docker-compose#v2.5.1:
        run: app
        workdir: /go/src/github.com/m3db/m3
    <<: *common
  - label: "FOSSA license scan"
    command: make clean install-vendor fossa
    plugins:
      docker-compose#v2.5.1:
        run: app
        workdir: /go/src/github.com/m3db/m3
        env:
          - FOSSA_API_KEY
