listenAddress:
  type: config
  value: 0.0.0.0:7206

metrics:
  scope:
    prefix: collector
  prometheus:
    onError: none
    handlerPath: /metrics
    listenAddress: 0.0.0.0:7207 # until https://github.com/m3db/m3/issues/682 is resolved
  sanitization: prometheus
  samplingRate: 1.0
  extended: none

etcd:
  env: default_env
  zone: embedded
  service: m3collector
  cacheDir: /var/lib/m3kv
  etcdClusters:
    - zone: embedded
      endpoints:
        - m3db_seed:2379

reporter:
  cache:
    capacity: 200000
    freshDuration: 5m
    stutterDuration: 1m

  matcher:
    initWatchTimeout: 10s
    rulesKVConfig:
      namespace: /rules
    namespacesKey: namespaces
    ruleSetKeyFmt: rulesets/%s
    namespaceTag: application
    defaultNamespace: global
    nameTagKey: __name__
    matchRangePast: 2m
    sortedTagIteratorPool:
      size: 8192
      watermark:
        low: 0.7
        high: 1.0

  client:
    placementKV:
      namespace: /placement
    placementWatcher:
      key: m3aggregator
      initWatchTimeout: 10s
    hashType: murmur32
    shardCutoffLingerDuration: 1m
    flushSize: 1440
    maxTimerBatchSize: 1120
    queueSize: 10000
    queueDropType: oldest
    encoder:
      initBufferSize: 2048
      maxMessageSize: 10485760
      bytesPool:
        buckets:
          - capacity: 2048
            count: 4096
          - capacity: 4096
            count: 4096
        watermark:
          low: 0.7
          high: 1.0
    connection:
      writeTimeout: 250ms

  clock:
    maxPositiveSkew: 2m
    maxNegativeSkew: 2m

  sortedTagIteratorPool:
    size: 8192
    watermark:
      low: 0.7
      high: 1.0

logging:
  level: info
  encoding: json
  outputPaths:
    - stdout
  errorOutputPaths:
    - stderr

