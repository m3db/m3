logging:
  level: info

metrics:
  scope:
    prefix: m3aggregator
  prometheus:
    onError: none
    handlerPath: /metrics
    listenAddress: 0.0.0.0:{{METRICS_PORT}}
    timerType: histogram
  sanitization: prometheus
  samplingRate: 1.0
  extended: none

http:
  listenAddress: 0.0.0.0:{{HTTP_PORT}}
  readTimeout: 60s
  writeTimeout: 60s

rawtcp:
  errorLogLimitPerSecond: 5
  keepAliveEnabled: true
  keepAlivePeriod: 1m
  listenAddress: 0.0.0.0:{{TCP_PORT}}
  tls:
    mode: permissive
    mTLSEnabled: true
    certFile: /etc/tls/server.crt
    keyFile: /etc/tls/server.key
    clientCAFile: /etc/tls/rootCA.crt
  protobufIterator:
    bytesPool:
      buckets:
      - capacity: 1024
        count: dynamic
      - capacity: 2048
        count: dynamic
      - capacity: 16384
        count: dynamic
    initBufferSize: 1024
    maxMessageSize: 10485760
  readBufferSize: 65536
  retry:
    backoffFactor: 2
    forever: true
    initialBackoff: 5ms
    jitter: true
    maxBackoff: 1s

kvClient:
  etcd:
    env: default_env
    zone: embedded
    service: m3aggregator
    cacheDir: /var/lib/m3kv
    etcdClusters:
      - zone: embedded
        endpoints:
          - etcd01:2379

runtimeOptions:
  kvConfig:
    environment: default_env
    zone: embedded
  writeValuesPerMetricLimitPerSecondKey: write-values-per-metric-limit-per-second
  writeValuesPerMetricLimitPerSecond: 0
  writeNewMetricLimitClusterPerSecondKey: write-new-metric-limit-cluster-per-second
  writeNewMetricLimitClusterPerSecond: 0
  writeNewMetricNoLimitWarmupDuration: 0

aggregator:
  hostID:
    resolver: environment
    envVarName: M3AGGREGATOR_HOST_ID
  instanceID:
    type: host_id
  metricPrefix: ""
  counterPrefix: ""
  timerPrefix: ""
  gaugePrefix: ""
  aggregationTypes:
    counterTransformFnType: empty
    timerTransformFnType: suffix
    gaugeTransformFnType: empty
    aggregationTypesPool:
      size: 1024
    quantilesPool:
      buckets:
        - count: 256
          capacity: 4
        - count: 128
          capacity: 8
  stream:
    eps: 0.001
    capacity: 32
    streamPool:
      size: 4096
    samplePool:
      size: 4096
    floatsPool:
      buckets:
        - count: 4096
          capacity: 16
        - count: 2048
          capacity: 32
        - count: 1024
          capacity: 64
  client:
    # For TCP ingest, we need placement config but not m3msg topics
    placementKV:
      namespace: /placement
      zone: embedded
      environment: default_env
    placementWatcher:
      key: m3aggregator
      initWatchTimeout: 15s
    connection:
      tls:
        enabled: true
        insecureSkipVerify: true
        tlsHandshakeOnConnect: true
        serverName: ""
        caFile: /etc/tls/rootCA.crt
        certFile: /etc/tls/client.crt
        keyFile: /etc/tls/client.key
        certificatesTTL: 24h
  placementManager:
    kvConfig:
      namespace: /placement
      environment: default_env
      zone: embedded
    placementWatcher:
      key: m3aggregator
      initWatchTimeout: 10s
  hashType: murmur32
  bufferDurationBeforeShardCutover: 10m
  bufferDurationAfterShardCutoff: 10m
  resignTimeout: 1m
  flushTimesManager:
    kvConfig:
      environment: default_env
      zone: embedded
    flushTimesKeyFmt: shardset/%d/flush
    flushTimesPersistRetrier:
      initialBackoff: 100ms
      backoffFactor: 2.0
      maxBackoff: 2s
      maxRetries: 3
  electionManager:
    election:
      leaderTimeout: 10s
      resignTimeout: 10s
      ttlSeconds: 10
    serviceID:
      name: m3aggregator
      environment: default_env
      zone: embedded
    electionKeyFmt: shardset/%d/lock
    campaignRetrier:
      initialBackoff: 100ms
      backoffFactor: 2.0
      maxBackoff: 2s
      forever: true
      jitter: true
    changeRetrier:
      initialBackoff: 100ms
      backoffFactor: 2.0
      maxBackoff: 5s
      forever: true
      jitter: true
    resignRetrier:
      initialBackoff: 100ms
      backoffFactor: 2.0
      maxBackoff: 5s
      forever: true
      jitter: true
    campaignStateCheckInterval: 1s
    shardCutoffCheckOffset: 30s
  flushManager:
    checkEvery: 1s
    jitterEnabled: true
    maxJitters:
      - flushInterval: 5s
        maxJitterPercent: 1.0
      - flushInterval: 10s
        maxJitterPercent: 0.5
      - flushInterval: 1m
        maxJitterPercent: 0.5
      - flushInterval: 10m
        maxJitterPercent: 0.5
      - flushInterval: 1h
        maxJitterPercent: 0.25
    numWorkersPerCPU: 0.5
    flushTimesPersistEvery: 10s
    maxBufferSize: 5m
    forcedFlushWindowSize: 10s
  flush:
    handlers:
      - dynamicBackend:
          name: m3msg
          hashType: murmur32
          storagePolicyFilters:
            - serviceID:
                environment: default_env
                name: local-consumer-service
                zone: embedded
              storagePolicies:
                - 10s:2d
          routingPolicyFilters:
            - serviceID:
                environment: default_env
                name: local-consumer-service
                zone: embedded
              isDefault: true
              allowedTrafficTypes:
                - m3
          routingPolicyConfig:
            staticConfig:
              trafficTypes:
                somethingelse: 0
                m3: 1
                os: 2
            dynamicConfig:
              kvConfig:
                environment: default_env
                zone: embedded
                namespace: /routing-policy
              kvKey: "routing-policy-config"
          producer:
            writer:
              topicName: {{TOPIC_NAME}}
              topicServiceOverride:
                zone: embedded
                environment: default_env
              messagePool:
                size: 16384
                watermark:
                  low: 0.2
                  high: 0.5
  forwarding:
    maxSingleDelay: 5s
  entryTTL: 1h
  entryCheckInterval: 10m
  maxTimerBatchSizePerWrite: 140
  defaultStoragePolicies:
    - 10s:2d
  maxNumCachedSourceSets: 2
  discardNaNAggregatedValues: true
  entryPool:
    size: 4096
  counterElemPool:
    size: 4096
  timerElemPool:
    size: 4096
  gaugeElemPool:
    size: 4096
